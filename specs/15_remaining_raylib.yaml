# Remaining Raylib Functions
# Functions that complete our Raylib coverage
# Following best practices: proper function handling

functions:










  # === REMAINING UTILITY FUNCTIONS ===
  - name: GETMONITORCOUNT
    raylib_name: GetMonitorCount
    args: []
    ret: int
    category: remaining_raylib
    description: "Get monitor count"
    working: true
    custom_body: "GetMonitorCount()"

  - name: GETMONITORNAME
    raylib_name: GetMonitorName
    args: [int]
    ret: string
    category: remaining_raylib
    description: "Get monitor name (monitor index)"
    working: true
    custom_body: "GetMonitorName(args[0].as_int())"



  # === REMAINING WINDOW FUNCTIONS ===
  - name: SETWINDOWICON
    raylib_name: SetWindowIcon
    args: [int]
    ret: void
    category: remaining_raylib
    description: "Set window icon (pass image ID)"
    working: true
    custom_body: "SetWindowIcon(*(Image*)args[0].as_int())"

  - name: SETWINDOWTITLE
    raylib_name: SetWindowTitle
    args: [string]
    ret: void
    category: remaining_raylib
    description: "Set window title (title)"
    working: true
    custom_body: "SetWindowTitle(args[0].as_string().c_str())"

  - name: SETWINDOWPOSITION
    raylib_name: SetWindowPosition
    args: [int, int]
    ret: void
    category: remaining_raylib
    description: "Set window position (x, y)"
    working: true
    custom_body: "SetWindowPosition(args[0].as_int(), args[1].as_int())"

  - name: SETWINDOWMONITOR
    raylib_name: SetWindowMonitor
    args: [int]
    ret: void
    category: remaining_raylib
    description: "Set window monitor (monitor index)"
    working: true
    custom_body: "SetWindowMonitor(args[0].as_int())"

  - name: SETWINDOWMIN
    raylib_name: SetWindowMinSize
    args: [int, int]
    ret: void
    category: remaining_raylib
    description: "Set window minimum size (width, height)"
    working: true
    custom_body: "SetWindowMinSize(args[0].as_int(), args[1].as_int())"

  - name: SETWINDOWMAX
    raylib_name: SetWindowMaxSize
    args: [int, int]
    ret: void
    category: remaining_raylib
    description: "Set window maximum size (width, height)"
    working: true
    custom_body: "SetWindowMaxSize(args[0].as_int(), args[1].as_int())"

  # === REMAINING INPUT FUNCTIONS ===
  - name: SETEXITKEY
    raylib_name: SetExitKey
    args: [int]
    ret: void
    category: remaining_raylib
    description: "Set exit key (key code)"
    working: true
    custom_body: "SetExitKey(args[0].as_int())"

  - name: SETGAMEPADMAPPINGS
    raylib_name: SetGamepadMappings
    args: [string]
    ret: int
    category: remaining_raylib
    description: "Set gamepad mappings (mappings string)"
    working: true
    custom_body: "SetGamepadMappings(args[0].as_string().c_str())"

  # === REMAINING GRAPHICS FUNCTIONS ===
  - name: SETTARGETFPS
    raylib_name: SetTargetFPS
    args: [int]
    ret: void
    category: remaining_raylib
    description: "Set target FPS (fps)"
    working: true
    custom_body: "SetTargetFPS(args[0].as_int())"

  - name: GETFRAMETIME
    raylib_name: GetFrameTime
    args: []
    ret: float
    category: remaining_raylib
    description: "Get frame time in seconds"
    working: true
    custom_body: "GetFrameTime()"

  - name: GETTIME
    raylib_name: GetTime
    args: []
    ret: double
    category: remaining_raylib
    description: "Get time in seconds"
    working: true
    custom_body: "GetTime()"

  - name: GETRANDOMVALUE
    raylib_name: GetRandomValue
    args: [int, int]
    ret: int
    category: remaining_raylib
    description: "Get random value between min and max (min, max)"
    working: true
    custom_body: "GetRandomValue(args[0].as_int(), args[1].as_int())"
