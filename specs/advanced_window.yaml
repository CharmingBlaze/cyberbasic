functions:
  # === ADVANCED WINDOW MANAGEMENT ===
  - name: ISWINDOWMAXIMIZED
    map_to: IsWindowMaximized
    args: []
    ret: bool
  
  - name: ISWINDOWFOCUSED
    map_to: IsWindowFocused
    args: []
    ret: bool
  
  - name: ISWINDOWRESIZED
    map_to: IsWindowResized
    args: []
    ret: bool
  
  - name: ISWINDOWSTATE
    map_to: IsWindowState
    args: [int]
    ret: bool
  
  - name: SETWINDOWSTATE
    map_to: SetWindowState
    args: [int]
    ret: void
  
  - name: CLEARWINDOWSTATE
    map_to: ClearWindowState
    args: [int]
    ret: void
  
  - name: TOGGLEFULLSCREEN
    map_to: ToggleFullscreen
    args: []
    ret: void
  
  - name: TOGGLEBORDERLESSWINDOWED
    map_to: ToggleBorderlessWindowed
    args: []
    ret: void
  
  - name: MAXIMIZEWINDOW
    map_to: MaximizeWindow
    args: []
    ret: void
  
  - name: MINIMIZEWINDOW
    map_to: MinimizeWindow
    args: []
    ret: void
  
  - name: RESTOREWINDOW
    map_to: RestoreWindow
    args: []
    ret: void
  
  - name: SETWINDOWICON
    map_to: SetWindowIcon
    args: [string]
    ret: void
    custom_body: |
      // TODO: SetWindowIcon expects Image, not string
      // For now, just return nil
      return Value::nil();
  
  - name: SETWINDOWTITLE
    map_to: SetWindowTitle
    args: [string]
    ret: void
  
  - name: SETWINDOWPOSITION
    map_to: SetWindowPosition
    args: [int, int]
    ret: void
  
  - name: SETWINDOWMONITOR
    map_to: SetWindowMonitor
    args: [int]
    ret: void
  
  - name: SETWINDOWMINSIZE
    map_to: SetWindowMinSize
    args: [int, int]
    ret: void
  
  - name: SETWINDOWMAXSIZE
    map_to: SetWindowMaxSize
    args: [int, int]
    ret: void
  
  - name: SETWINDOWSIZE
    map_to: SetWindowSize
    args: [int, int]
    ret: void
  
  - name: GETWINDOWPOSITION
    map_to: GetWindowPosition
    args: []
    ret: string
    custom_body: |
      ::Vector2 pos = ::GetWindowPosition();
      return Value::from_string(std::to_string((int)pos.x) + "," + std::to_string((int)pos.y));
  
  - name: GETWINDOWSCALE
    map_to: GetWindowScaleDPI
    args: []
    ret: string
    custom_body: |
      ::Vector2 scale = ::GetWindowScaleDPI();
      return Value::from_string(std::to_string(scale.x) + "," + std::to_string(scale.y));
  
  - name: GETMONITORCOUNT
    map_to: GetMonitorCount
    args: []
    ret: int
  
  - name: GETMONITORWIDTH
    map_to: GetMonitorWidth
    args: [int]
    ret: int
  
  - name: GETMONITORHEIGHT
    map_to: GetMonitorHeight
    args: [int]
    ret: int
  
  - name: GETMONITORPHYSICALWIDTH
    map_to: GetMonitorPhysicalWidth
    args: [int]
    ret: int
  
  - name: GETMONITORPHYSICALHEIGHT
    map_to: GetMonitorPhysicalHeight
    args: [int]
    ret: int
  
  - name: GETMONITORNAME
    map_to: GetMonitorName
    args: [int]
    ret: string
    custom_body: |
      return Value::from_string(::GetMonitorName(args[0].as_int()));
  
  - name: GETCURRENTMONITOR
    map_to: GetCurrentMonitor
    args: []
    ret: int
