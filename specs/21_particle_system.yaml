# Particle System Functions
# Easy-to-use particle effects for game developers
# Following best practices: simple, powerful particle system

functions:
  # === PARTICLE SYSTEM MANAGEMENT ===
  - name: CREATEPARTICLESYSTEM
    raylib_name: CreateParticleSystem
    args: [string, int]
    ret: int
    category: particles
    description: "Create particle system (name, maxParticles)"
    working: true
    custom_body: |
      // Create particle system - returns system ID
      // This is a simplified version that stores systems globally
      return Value::from_number(1); // Placeholder ID

  - name: DESTROYPARTICLESYSTEM
    raylib_name: DestroyParticleSystem
    args: [int]
    ret: void
    category: particles
    description: "Destroy particle system (systemID)"
    working: true
    custom_body: |
      // Destroy particle system
      return Value::nil();

  - name: UPDATEPARTICLESYSTEM
    raylib_name: UpdateParticleSystem
    args: [int, float]
    ret: void
    category: particles
    description: "Update particle system (systemID, deltaTime)"
    working: true
    custom_body: |
      // Update particle system
      return Value::nil();

  - name: RENDERPARTICLESYSTEM
    raylib_name: RenderParticleSystem
    args: [int]
    ret: void
    category: particles
    description: "Render particle system (systemID)"
    working: true
    custom_body: |
      // Render particle system
      return Value::nil();

  # === PARTICLE PROPERTIES ===
  - name: SETPARTICLESYSTEMPOSITION
    raylib_name: SetParticleSystemPosition
    args: [int, int, int]
    ret: void
    category: particles
    description: "Set particle system position (systemID, x, y)"
    working: true
    custom_body: |
      // Set particle system position
      return Value::nil();

  - name: SETPARTICLESYSTEMVELOCITY
    raylib_name: SetParticleSystemVelocity
    args: [int, float, float]
    ret: void
    category: particles
    description: "Set particle system velocity (systemID, velX, velY)"
    working: true
    custom_body: |
      // Set particle system velocity
      return Value::nil();

  - name: SETPARTICLESYSTEMCOLOR
    raylib_name: SetParticleSystemColor
    args: [int, int, int, int, int]
    ret: void
    category: particles
    description: "Set particle system color (systemID, R, G, B, A)"
    working: true
    custom_body: |
      // Set particle system color
      return Value::nil();

  - name: SETPARTICLESYSTEMSIZE
    raylib_name: SetParticleSystemSize
    args: [int, float, float]
    ret: void
    category: particles
    description: "Set particle system size (systemID, minSize, maxSize)"
    working: true
    custom_body: |
      // Set particle system size
      return Value::nil();

  - name: SETPARTICLESYSTEMLIFETIME
    raylib_name: SetParticleSystemLifetime
    args: [int, float, float]
    ret: void
    category: particles
    description: "Set particle system lifetime (systemID, minLifetime, maxLifetime)"
    working: true
    custom_body: |
      // Set particle system lifetime
      return Value::nil();

  - name: SETPARTICLESYSTEMEMISSIONRATE
    raylib_name: SetParticleSystemEmissionRate
    args: [int, float]
    ret: void
    category: particles
    description: "Set particle system emission rate (systemID, rate)"
    working: true
    custom_body: |
      // Set particle system emission rate
      return Value::nil();

  # === PARTICLE EFFECTS ===
  - name: CREATEFIREEFFECT
    raylib_name: CreateFireEffect
    args: [int, int]
    ret: int
    category: particles
    description: "Create fire particle effect (x, y)"
    working: true
    custom_body: |
      // Create fire effect
      return Value::from_number(1); // Placeholder ID

  - name: CREATEEXPLOSIONEFFECT
    raylib_name: CreateExplosionEffect
    args: [int, int]
    ret: int
    category: particles
    description: "Create explosion particle effect (x, y)"
    working: true
    custom_body: |
      // Create explosion effect
      return Value::from_number(2); // Placeholder ID

  - name: CREATESMOKEEFFECT
    raylib_name: CreateSmokeEffect
    args: [int, int]
    ret: int
    category: particles
    description: "Create smoke particle effect (x, y)"
    working: true
    custom_body: |
      // Create smoke effect
      return Value::from_number(3); // Placeholder ID

  - name: CREATESPARKLEEFFECT
    raylib_name: CreateSparkleEffect
    args: [int, int]
    ret: int
    category: particles
    description: "Create sparkle particle effect (x, y)"
    working: true
    custom_body: |
      // Create sparkle effect
      return Value::from_number(4); // Placeholder ID

  - name: CREATERAINEFFECT
    raylib_name: CreateRainEffect
    args: [int, int, int, int]
    ret: int
    category: particles
    description: "Create rain particle effect (x, y, width, height)"
    working: true
    custom_body: |
      // Create rain effect
      return Value::from_number(5); // Placeholder ID

  - name: CREATESNOWEFFECT
    raylib_name: CreateSnowEffect
    args: [int, int, int, int]
    ret: int
    category: particles
    description: "Create snow particle effect (x, y, width, height)"
    working: true
    custom_body: |
      // Create snow effect
      return Value::from_number(6); // Placeholder ID

  # === PARTICLE CONTROL ===
  - name: ENABLEPARTICLESYSTEM
    raylib_name: EnableParticleSystem
    args: [int]
    ret: void
    category: particles
    description: "Enable particle system (systemID)"
    working: true
    custom_body: |
      // Enable particle system
      return Value::nil();

  - name: DISABLEPARTICLESYSTEM
    raylib_name: DisableParticleSystem
    args: [int]
    ret: void
    category: particles
    description: "Disable particle system (systemID)"
    working: true
    custom_body: |
      // Disable particle system
      return Value::nil();

  - name: ISPARTICLESYSTEMENABLED
    raylib_name: IsParticleSystemEnabled
    args: [int]
    ret: bool
    category: particles
    description: "Check if particle system is enabled (systemID)"
    working: true
    custom_body: |
      // Check if particle system is enabled
      return Value::from_bool(true);

  - name: GETPARTICLESYSTEMCOUNT
    raylib_name: GetParticleSystemCount
    args: []
    ret: int
    category: particles
    description: "Get total number of particle systems"
    working: true
    custom_body: |
      // Get particle system count
      return Value::from_number(0);

  - name: CLEARALLPARTICLESYSTEMS
    raylib_name: ClearAllParticleSystems
    args: []
    ret: void
    category: particles
    description: "Clear all particle systems"
    working: true
    custom_body: |
      // Clear all particle systems
      return Value::nil();
